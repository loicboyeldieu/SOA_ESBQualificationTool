package com.esbqualificationtool.view;

import com.esbqualificationtool.jaxbhandler.Scenario;
import com.esbqualificationtool.model.ScenarioResult;
import java.awt.HeadlessException;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class MainFrameJFrame extends javax.swing.JFrame {

    private DefaultListModel scenarios;
    private DefaultListModel results;
    private ESBQualificationToolView view;

    public MainFrameJFrame(DefaultListModel scenarios, DefaultListModel results, ESBQualificationToolView view) throws HeadlessException {
        this.scenarios = scenarios;
        this.results = results;
        this.view = view;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelLoad = new javax.swing.JLabel();
        jTextFieldXmlUrl = new javax.swing.JTextField();
        jButtonBrowse = new javax.swing.JButton();
        jButtonLoad = new javax.swing.JButton();
        jLabelLaunch = new javax.swing.JLabel();
        jScrollPaneScenarios = new javax.swing.JScrollPane();
        jListScenarios = new javax.swing.JList();
        jButtonLaunch = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelResults = new javax.swing.JLabel();
        jScrollPaneResults = new javax.swing.JScrollPane();
        jListResults = new javax.swing.JList();
        jButtonKibana = new javax.swing.JButton();
        jButtonFileResults = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESBQualification Tool - DD 2015/2016");

        jLabelLoad.setText("- Load a scenario");

        jTextFieldXmlUrl.setText("/url/to/xml/file");

        jButtonBrowse.setText("Browse");
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });

        jButtonLoad.setText("Load");
        jButtonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadActionPerformed(evt);
            }
        });

        jLabelLaunch.setText("- Launch a scenario");

        jListScenarios.setModel(this.scenarios);
        jListScenarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneScenarios.setViewportView(jListScenarios);

        jButtonLaunch.setText("Launch");
        jButtonLaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLaunchActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabelResults.setText("- View results");

        jListResults.setModel(this.results);
        jListResults.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneResults.setViewportView(jListResults);

        jButtonKibana.setText("Kibana");
        jButtonKibana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKibanaActionPerformed(evt);
            }
        });

        jButtonFileResults.setText("File results");
        jButtonFileResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFileResultsActionPerformed(evt);
            }
        });

        jMenu1.setText("?");

        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAbout);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLaunch)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldXmlUrl, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonKibana, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jButtonLaunch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonFileResults)
                                    .addComponent(jButtonDelete, 0, 0, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelResults)
                .addContainerGap(524, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPaneResults))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPaneScenarios, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(280, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldXmlUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLoad))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabelLaunch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPaneScenarios, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonLaunch)
                            .addComponent(jButtonDelete))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabelResults)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPaneResults, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonKibana)
                            .addComponent(jButtonFileResults))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        JOptionPane.showMessageDialog(null, "SOA-PDL 2015-2016 Project\n" +
                "Boyeldieu Loïc - Gourraud Anthony - Rouvier Philippe", "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jButtonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadActionPerformed
        view.informControllerToLoadScenario(jTextFieldXmlUrl.getText());
    }//GEN-LAST:event_jButtonLoadActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        if (jListScenarios.getSelectedValue() != null) {
            Scenario s = (Scenario) jListScenarios.getSelectedValue();
            view.informControllerToDeleteScenario((Scenario) jListScenarios.getSelectedValue());
        } else {
            JOptionPane.showMessageDialog(null, "Please select a scenario", "Erreur ! No scenario selected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonFileResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFileResultsActionPerformed
        if (jListResults.getSelectedValue() != null) {
            ScenarioResult sr = (ScenarioResult) jListResults.getSelectedValue();
            JOptionPane.showMessageDialog(null, "Url to file results : " +
                    sr.getFileResultsAbsUrl(), "File Result", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a scenario result", "Erreur ! No scenario result selected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonFileResultsActionPerformed

    private void jButtonKibanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKibanaActionPerformed
        if (jListResults.getSelectedValue() != null) {
            ScenarioResult sr = (ScenarioResult) jListResults.getSelectedValue();
            JOptionPane.showMessageDialog(null, "Kibana URL : " +
                    sr.getKibanaLink(), "Kibana", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a scenario result", "Erreur ! No scenario result selected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonKibanaActionPerformed

    private void jButtonLaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLaunchActionPerformed
        if (jListScenarios.getSelectedValue() != null) {
            Scenario s = (Scenario) jListScenarios.getSelectedValue();
            view.informControllerToLaunchScenario(s);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a scenario", "Erreur ! No scenario selected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonLaunchActionPerformed

    private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseActionPerformed
        JFileChooser input = new JFileChooser();
        int result = input.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            setXmlUrlAbsPath(input.getSelectedFile().getAbsolutePath());
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel was selected");
        }
    }//GEN-LAST:event_jButtonBrowseActionPerformed

    public void setXmlUrlAbsPath(String xmlUrlAbsPath) {
        jTextFieldXmlUrl.setText(xmlUrlAbsPath);
    }

    public String getXmlUrlAbsPath() {
        return jTextFieldXmlUrl.getText();
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainFrameJFrame().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonFileResults;
    private javax.swing.JButton jButtonKibana;
    private javax.swing.JButton jButtonLaunch;
    private javax.swing.JButton jButtonLoad;
    private javax.swing.JLabel jLabelLaunch;
    private javax.swing.JLabel jLabelLoad;
    private javax.swing.JLabel jLabelResults;
    private javax.swing.JList jListResults;
    private javax.swing.JList jListScenarios;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JScrollPane jScrollPaneResults;
    private javax.swing.JScrollPane jScrollPaneScenarios;
    private javax.swing.JTextField jTextFieldXmlUrl;
    // End of variables declaration//GEN-END:variables
}
